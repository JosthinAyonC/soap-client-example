
package sasf.jayon.clientsoap.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "ProductsPortService", targetNamespace = "http://soapservice.jayon.sasf/springsoap/product/gen", wsdlLocation = "http://localhost:8080/ws/products.wsdl")
public class ProductsPortService
    extends Service
{

    private final static URL PRODUCTSPORTSERVICE_WSDL_LOCATION;
    private final static WebServiceException PRODUCTSPORTSERVICE_EXCEPTION;
    private final static QName PRODUCTSPORTSERVICE_QNAME = new QName("http://soapservice.jayon.sasf/springsoap/product/gen", "ProductsPortService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/ws/products.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PRODUCTSPORTSERVICE_WSDL_LOCATION = url;
        PRODUCTSPORTSERVICE_EXCEPTION = e;
    }

    public ProductsPortService() {
        super(__getWsdlLocation(), PRODUCTSPORTSERVICE_QNAME);
    }

    public ProductsPortService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PRODUCTSPORTSERVICE_QNAME, features);
    }

    public ProductsPortService(URL wsdlLocation) {
        super(wsdlLocation, PRODUCTSPORTSERVICE_QNAME);
    }

    public ProductsPortService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PRODUCTSPORTSERVICE_QNAME, features);
    }

    public ProductsPortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProductsPortService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ProductsPort
     */
    @WebEndpoint(name = "ProductsPortSoap11")
    public ProductsPort getProductsPortSoap11() {
        return super.getPort(new QName("http://soapservice.jayon.sasf/springsoap/product/gen", "ProductsPortSoap11"), ProductsPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductsPort
     */
    @WebEndpoint(name = "ProductsPortSoap11")
    public ProductsPort getProductsPortSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://soapservice.jayon.sasf/springsoap/product/gen", "ProductsPortSoap11"), ProductsPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PRODUCTSPORTSERVICE_EXCEPTION!= null) {
            throw PRODUCTSPORTSERVICE_EXCEPTION;
        }
        return PRODUCTSPORTSERVICE_WSDL_LOCATION;
    }

}
